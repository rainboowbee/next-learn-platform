{"/advanced/variable":{"title":"Переменные","data":{"":"Переменные используются для хранения данных в памяти программы. В Python переменная создается в момент присваивания ей значения.","объявление-переменных#Объявление переменных":"имя_переменной = значение","пример#Пример":"x = 10\ny = \"Привет\"\nz = 3.14\n\nprint(x, y, z)\n\n# Вывод: 10 Привет 3.14","правила-именования-переменных#Правила именования переменных":"Имя переменной может содержать буквы, цифры и символ _, но не может начинаться с цифры.\nЧувствительно к регистру (name и Name — разные переменные).\nНе должно совпадать с ключевыми словами Python (например, if, for, while).","типы-данных#Типы данных":"В Python переменные не требуют явного указания типа, но у каждой переменной есть тип.","основные-типы-данных#Основные типы данных:":"int — целые числа (x = 10)\nfloat — числа с плавающей запятой (y = 3.14)\nstr — строки (z = \"Hello\")\nbool — логические (True или False)\nlist — списки (arr = [1, 2, 3])\ntuple — кортежи (t = (1, 2, 3))\ndict — словари (d = {\"ключ\": \"значение\"})\nset — множества (s = {1, 2, 3})","проверка-типа-переменной#Проверка типа переменной":"x = 42\nprint(type(x))  # Вывод: <class 'int'>","динамическая-типизация#Динамическая типизация":"Python позволяет изменять тип переменной в процессе выполнения:\nx = 10 x = \"Теперь я строка!\" print(x)\n# Вывод: Теперь я строка!","множественное-присваивание#Множественное присваивание":"Можно присваивать несколько значений сразу:\na, b, c = 1, 2, 3 print(a, b, c)\n# Вывод: 1 2 3","заключение#Заключение":"Переменные — основа любой программы. Python позволяет работать с ними гибко благодаря динамической типизации и множественным встроенным типам данных."}}}